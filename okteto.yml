name: voting

icon: https://github.com/okteto/microservices-demo/raw/main/vote-icon.png

build:
  result:
    context: result
    dockerfile: Dockerfile

  vote:
    context: vote
    dockerfile: Dockerfile

deploy:
  image: okteto/pipeline-runner:1.0.0-sam
  commands:
    - name: deploy worker service
      command: |
        set -e
        cd worker
        sam build
        STACK_NAME="${OKTETO_NAMESPACE}-voting-texkhnclxd"
        sam deploy --region us-east-1 --no-confirm-changeset --no-fail-on-empty-changeset --resolve-s3 "${OKTETO_NAMESPACE}-texkhnclxd" --stack-name ${STACK_NAME} --parameter-overrides ParameterKey=MongoDBUsername,ParameterValue=${MONGODB_USERNAME} ParameterKey=MongoDBPassword,ParameterValue=${MONGODB_PASSWORD} ParameterKey=MongoDBDatabase,ParameterValue=${OKTETO_NAMESPACE} ParameterKey=MongoDBHost,ParameterValue=${MONGODB_HOST} --capabilities CAPABILITY_IAM
        aws cloudformation describe-stacks --region us-east-1 --stack-name ${STACK_NAME} --query "Stacks[0].Outputs[0].OutputValue" --output text > lambda-url
        echo "OKTETO_EXTERNAL_LAMBDA_ENDPOINTS_FUNCTION_URL=https://us-east-1.console.aws.amazon.com/lambda/home?region=us-east-1#/applications/${OKTETO_NAMESPACE}-okteto-lambda" >> $OKTETO_ENV
        echo "OKTETO_EXTERNAL_ATLAS_ENDPOINTS_DASHBOARD_URL=${MONGODB_WEBURL}/${OKTETO_NAMESPACE}" >> $OKTETO_ENV

    - name: deploy vote service
      command: |
        LAMBDA_URL=$(cat worker/lambda-url)
        helm upgrade --install vote vote/chart --set image=${OKTETO_BUILD_VOTE_IMAGE} --set worker=${LAMBDA_URL}
       
    - name: deploy result service
      command: helm upgrade --install result result/chart --set image=${OKTETO_BUILD_RESULT_IMAGE} --set mongodb.username=${MONGODB_USERNAME} --set mongodb.password=${MONGODB_PASSWORD} --set mongodb.database=${OKTETO_NAMESPACE} --set mongodb.host=${MONGODB_HOST}

    - name: deploy postman workspace
      command: |
        # api key PMAK-6412bd601a5d716cc0441bc9-32932815b86fea14a8bfca521a6282487d
        # get workspace https://api.getpostman.com/workspaces/81c9a836-f1a2-43d8-9bb9-90bb88a10f62)
        # create workspace https://api.getpostman.com/workspaces
        # get collection https://api.getpostman.com/collections/15408036-bfcdad6b-bdba-4956-a9f0-eb3a3bf0d7d8
        # create collection https://api.getpostman.com/collections?workspace={{workspaceIdNew}}

destroy:
  image: okteto/pipeline-runner:1.0.0-sam
  commands:
    - name: destroy worker service
      command: |
        sam delete --no-prompts --stack-name "${OKTETO_NAMESPACE}-voting-texkhnclxd" --region us-east-1

external:
  lambda:
    icon: function
    notes: docs/lambda.md
    endpoints:
    - name: function
  atlas:
    icon: database
    notes: docs/atlas.md
    endpoints:
    - name: dashboard
      
dev:
  vote:
    command: mvn spring-boot:run
    sync:
      - ./vote:/app
    forward:
    - 5005:5005
    persistentVolume:
      enabled: false

  result:
    command: nodemon server.js
    sync:
      - ./result:/app
    persistentVolume:
      enabled: false